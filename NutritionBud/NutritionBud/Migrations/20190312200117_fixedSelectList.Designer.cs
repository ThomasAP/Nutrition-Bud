// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NutritionBud.Data;

namespace NutritionBud.Migrations
{
    [DbContext(typeof(NutritionPlanDbContext))]
    [Migration("20190312200117_fixedSelectList")]
    partial class fixedSelectList
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NutritionBud.Models.Food", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("NutritionPlanID");

                    b.Property<decimal>("Price");

                    b.HasKey("ID");

                    b.HasIndex("NutritionPlanID");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("NutritionBud.Models.NutritionPlan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("NutritionPlans");
                });

            modelBuilder.Entity("NutritionBud.Models.Food", b =>
                {
                    b.HasOne("NutritionBud.Models.NutritionPlan", "NutritionPlan")
                        .WithMany("Foods")
                        .HasForeignKey("NutritionPlanID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
